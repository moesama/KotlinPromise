plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id "com.jfrog.bintray" version "1.8.4"
    id 'nebula.maven-publish' version '9.2.0'
    id 'nebula.javadoc-jar' version '9.2.0'
    id 'nebula.source-jar' version '9.2.0'
}

def readLocalProperties() {
    File file = rootProject.file('local.properties')
    if (file.exists()) {
        //加载资源
        InputStream inputStream = file.newDataInputStream()
        Properties localProperties = new Properties()
        localProperties.load(inputStream)
        ext.bintrayUser = localProperties.getProperty('bintray.user')
        ext.bintrayKey = localProperties.getProperty('bintray.key')
    }
}

readLocalProperties()

group 'io.github.moesama'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

bintray {
    user = "${bintrayUser}"
    key = "${bintrayKey}"
    publications = ['nebula']
    pkg {
        repo = 'Maven'
        name = 'kotlin-promise'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/moesama/KotlinPromise.git'
        labels = ['promise', 'kotlin']
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = "Kotlin Promise Library ${project.version}"
            vcsTag = project.version
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            groupId project.group
            artifactId 'kotlin-promise'
            version project.version
        }
    }
}